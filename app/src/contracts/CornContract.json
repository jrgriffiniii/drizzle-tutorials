{
  "contractName": "CornContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fallback",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Received",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "MAX_BALANCE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "sell",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Fallback\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Received\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MAX_BALANCE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"purchase\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CornContract.sol\":\"CornContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CommodityContract.sol\":{\"keccak256\":\"0x2165d6aa85089b318b2be9b69f23168a322032198bde2c0ca1f5615ca462a6fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bebdd135800b18191ef49ec50430d0fe6b1f97198e31403576ca629562f69d68\",\"dweb:/ipfs/QmZFz1NaPH1Xeovs5iZDesh3naDUjh52ytCwm55zgR6F7E\"]},\"project:/contracts/CornContract.sol\":{\"keccak256\":\"0x452a15defe3ecc1b2578cdd15e4ccc7a43f7c086fb2f2c3ba68641dc224e6a81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dcc4cb2b4f04233e2371a45b4cd7fce54de0f11e39bf81771e18f9df7374092\",\"dweb:/ipfs/QmQSaNQHFGjCMyEm7SL2KNH6F9eAFPG6hC5nJP9uHnKNzq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191630908117825581526001602052604090206103e890556102d8806100446000396000f3fe6080604052600436106100595760003560e01c80631387c4fd146100ce57806345710074146100fb57806364edfbf0146101055780636c9c2faf1461010d578063def92c6914610138578063f8b2cb4f1461014e57610099565b3661009957604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587491015b60405180910390a1005b604080513381523460208201527ffbf15a1bae5e021d024841007b692b167afd2a281a4ff0b44f47387eb388205c910161008f565b3480156100da57600080fd5b506000546001600160a01b0316315b60405190815260200160405180910390f35b610103610184565b005b6101036101db565b34801561011957600080fd5b50600080546001600160a01b03168152600160205260409020546100e9565b34801561014457600080fd5b506100e96103e881565b34801561015a57600080fd5b506100e961016936600461022d565b6001600160a01b031660009081526001602052604090205490565b336000818152600160205260408120805434928392916101a5908490610275565b9091555050600080546001600160a01b0316815260016020526040812080548392906101d290849061025d565b90915550505050565b600080546001600160a01b031680825260016020526040822080549192349283929190610209908490610275565b909155505033600090815260016020526040812080548392906101d290849061025d565b60006020828403121561023f57600080fd5b81356001600160a01b038116811461025657600080fd5b9392505050565b600082198211156102705761027061028c565b500190565b6000828210156102875761028761028c565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122022e6ce0c6bb6f7c84a94dbc94952388a9e5b6d4d4c22f4537acc0129e431a67764736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80631387c4fd146100ce57806345710074146100fb57806364edfbf0146101055780636c9c2faf1461010d578063def92c6914610138578063f8b2cb4f1461014e57610099565b3661009957604080513381523460208201527f88a5966d370b9919b20f3e2c13ff65706f196a4e32cc2c12bf57088f8852587491015b60405180910390a1005b604080513381523460208201527ffbf15a1bae5e021d024841007b692b167afd2a281a4ff0b44f47387eb388205c910161008f565b3480156100da57600080fd5b506000546001600160a01b0316315b60405190815260200160405180910390f35b610103610184565b005b6101036101db565b34801561011957600080fd5b50600080546001600160a01b03168152600160205260409020546100e9565b34801561014457600080fd5b506100e96103e881565b34801561015a57600080fd5b506100e961016936600461022d565b6001600160a01b031660009081526001602052604090205490565b336000818152600160205260408120805434928392916101a5908490610275565b9091555050600080546001600160a01b0316815260016020526040812080548392906101d290849061025d565b90915550505050565b600080546001600160a01b031680825260016020526040822080549192349283929190610209908490610275565b909155505033600090815260016020526040812080548392906101d290849061025d565b60006020828403121561023f57600080fd5b81356001600160a01b038116811461025657600080fd5b9392505050565b600082198211156102705761027061028c565b500190565b6000828210156102875761028761028c565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122022e6ce0c6bb6f7c84a94dbc94952388a9e5b6d4d4c22f4537acc0129e431a67764736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1158:3",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:3",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:3"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:3"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:3"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:3"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:3"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:3"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:3",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:3",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:3"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:3"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:3",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:3",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:3"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:3"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:3"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:3"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:3"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:3"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:3",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:3"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:3"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:3",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:3",
                "type": ""
              }
            ],
            "src": "14:286:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "434:145:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "444:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "456:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "467:2:3",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "452:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "452:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "444:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "486:9:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "501:6:3"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "517:3:3",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "522:1:3",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "513:3:3"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "513:11:3"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "526:1:3",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "509:3:3"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "509:19:3"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:32:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "479:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "479:51:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "479:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "550:9:3"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "561:2:3",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "546:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "546:18:3"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "566:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "539:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "539:34:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "539:34:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "395:9:3",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "406:6:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "414:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "425:4:3",
                "type": ""
              }
            ],
            "src": "305:274:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "685:76:3",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "695:26:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "707:9:3"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "718:2:3",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "703:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "703:18:3"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "695:4:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "737:9:3"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "748:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "730:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "730:25:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "730:25:3"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "654:9:3",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "665:6:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "676:4:3",
                "type": ""
              }
            ],
            "src": "584:177:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "814:80:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "841:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "843:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "843:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "843:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "830:1:3"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "837:1:3"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "833:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "833:6:3"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "827:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "827:13:3"
                  },
                  "nodeType": "YulIf",
                  "src": "824:39:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "872:16:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "883:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "886:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "879:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "879:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "797:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "800:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "806:3:3",
                "type": ""
              }
            ],
            "src": "766:128:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "948:76:3",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:22:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "972:16:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:18:3"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:18:3"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "964:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "967:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "961:2:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:8:3"
                  },
                  "nodeType": "YulIf",
                  "src": "958:34:3"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1001:17:3",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1013:1:3"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1016:1:3"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:9:3"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "1001:4:3"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "930:1:3",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "933:1:3",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "939:4:3",
                "type": ""
              }
            ],
            "src": "899:125:3"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1061:95:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1078:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1085:3:3",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1090:10:3",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1081:3:3"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1081:20:3"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1071:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1071:31:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1071:31:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1118:1:3",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1121:4:3",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1111:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1111:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1111:15:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:1:3",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1145:4:3",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1135:6:3"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1135:15:3"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1135:15:3"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1029:127:3"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 3,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "104:47:1:-:0;;;;;;;;;;;;-1:-1:-1;422:8:0;:24;;-1:-1:-1;;;;;;422:24:0;441:4;422:24;;;;;456:18;;422:24;456:18;;;;;129:4;456:32;;104:47:1;;;;;;",
  "deployedSourceMap": "104:47:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;543:31:0;;;552:10;479:51:3;;564:9:0;561:2:3;546:18;;539:34;543:31:0;;452:18:3;543:31:0;;;;;;;;104:47:1;;630:31:0;;;639:10;479:51:3;;651:9:0;561:2:3;546:18;;539:34;630:31:0;;452:18:3;630:31:0;305:274:3;674:96:0;;;;;;;;;;-1:-1:-1;721:7:0;747:8;-1:-1:-1;;;;;747:8:0;:16;674:96;;;730:25:3;;;718:2;703:18;674:96:0;;;;;;;1249:209;;;:::i;:::-;;989:254;;;:::i;776:95::-;;;;;;;;;;-1:-1:-1;820:7:0;855:8;;-1:-1:-1;;;;;855:8:0;846:18;;:8;:18;;;;;;776:95;;91:42;;;;;;;;;;;;129:4;91:42;;877:106;;;;;;;;;;-1:-1:-1;877:106:0;;;;;:::i;:::-;-1:-1:-1;;;;;961:15:0;935:7;961:15;;;:8;:15;;;;;;;877:106;1249:209;1325:10;1292:22;1383:20;;;:8;:20;;;;;:30;;1363:9;;;;1383:20;:30;;1363:9;;1383:30;:::i;:::-;;;;-1:-1:-1;;1423:18:0;1432:8;;-1:-1:-1;;;;;1432:8:0;1423:18;;:8;:18;;;;;:28;;1445:6;;1423:18;:28;;1445:6;;1423:28;:::i;:::-;;;;-1:-1:-1;;;;1249:209:0:o;989:254::-;1036:22;1069:8;;-1:-1:-1;;;;;1069:8:0;1168:18;;;1069:8;1168:18;;;;;:28;;1069:8;;1105:9;;;;1168:18;1036:22;1168:28;;1105:9;;1168:28;:::i;:::-;;;;-1:-1:-1;;1215:10:0;1206:20;;;;:8;:20;;;;;:30;;1230:6;;1206:20;:30;;1230:6;;1206:30;:::i;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;766:128::-;806:3;837:1;833:6;830:1;827:13;824:39;;;843:18;;:::i;:::-;-1:-1:-1;879:9:3;;766:128::o;899:125::-;939:4;967:1;964;961:8;958:34;;;972:18;;:::i;:::-;-1:-1:-1;1009:9:3;;899:125::o;1029:127::-;1090:10;1085:3;1081:20;1078:1;1071:31;1121:4;1118:1;1111:15;1145:4;1142:1;1135:15",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.7;\n\nimport \"../contracts/CommodityContract.sol\";\n\ncontract CornContract is CommodityContract {\n\n}\n\n/*\ncontract CornContract is VRFConsumerBase, CommodityContract {\n\n  bytes32 private s_keyHash;\n  uint256 private s_fee;\n  mapping(bytes32 => address) private s_rollers;\n  mapping(address => uint256) private s_results;\n\n  // constructor\n  constructor(address vrfCoordinator, address link, bytes32 keyHash, uint256 fee)\n    public\n    VRFConsumerBase(vrfCoordinator, link)\n  {\n    s_keyHash = keyHash;\n    s_fee = fee;\n  }\n\n  // Get Price\n  function rollDice(address roller) public onlyOwner returns (bytes32 requestId) {\n    // checking LINK balance\n    require(LINK.balanceOf(address(this)) >= s_fee, \"Not enough LINK to pay fee\");\n\n    // checking if roller has already rolled die\n    require(s_results[roller] == 0, \"Already rolled\");\n\n    // requesting randomness\n    requestId = requestRandomness(s_keyHash, s_fee);\n\n    // storing requestId and roller address\n    s_rollers[requestId] = roller;\n\n    // emitting event to signal rolling of die\n    s_results[roller] = ROLL_IN_PROGRESS;\n    emit DiceRolled(requestId, roller);\n  }\n\n  function fulfillRandomness(bytes32 requestId, uint256 randomness) internal override {\n    uint256 d20Value = randomness.mod(20).add(1);\n    s_results[s_rollers[requestId]] = d20Value;\n    emit DiceLanded(requestId, d20Value);\n  }\n\n  function house(address player) public view returns (string memory) {\n    require(s_results[player] != 0, \"Dice not rolled\");\n    require(s_results[player] != ROLL_IN_PROGRESS, \"Roll in progress\");\n    return getHouseName(s_results[player]);\n  }\n}\n*/\n",
  "sourcePath": "/Users/jrg5/src/github.com/jrgriffiniii/workspace1/drizzle-tutorials/contracts/CornContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/CornContract.sol",
    "exportedSymbols": {
      "CommodityContract": [
        152
      ],
      "CornContract": [
        158
      ]
    },
    "id": 159,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 154,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/contracts/CommodityContract.sol",
        "file": "../contracts/CommodityContract.sol",
        "id": 155,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 153,
        "src": "58:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 156,
              "name": "CommodityContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152,
              "src": "129:17:1"
            },
            "id": 157,
            "nodeType": "InheritanceSpecifier",
            "src": "129:17:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 158,
        "linearizedBaseContracts": [
          158,
          152
        ],
        "name": "CornContract",
        "nameLocation": "113:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 159,
        "src": "104:47:1",
        "usedErrors": []
      }
    ],
    "src": "33:1640:1"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CornContract.sol",
    "exportedSymbols": {
      "CommodityContract": [
        152
      ],
      "CornContract": [
        158
      ]
    },
    "id": 159,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 154,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:1"
      },
      {
        "absolutePath": "project:/contracts/CommodityContract.sol",
        "file": "../contracts/CommodityContract.sol",
        "id": 155,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 159,
        "sourceUnit": 153,
        "src": "58:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 156,
              "name": "CommodityContract",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 152,
              "src": "129:17:1"
            },
            "id": 157,
            "nodeType": "InheritanceSpecifier",
            "src": "129:17:1"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 158,
        "linearizedBaseContracts": [
          158,
          152
        ],
        "name": "CornContract",
        "nameLocation": "113:12:1",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 159,
        "src": "104:47:1",
        "usedErrors": []
      }
    ],
    "src": "33:1640:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {
    "1642304058789": {
      "events": {},
      "links": {},
      "address": "0xb036f04887CaEa0E329dCC509e105DAa40223E25",
      "transactionHash": "0x514b3558304e4c01812d3e33918ecad9d922c7acbc69bddd2527de4139bc2222"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-01-19T20:18:59.596Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}